<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Santos Gallegos (Posts about documentation)</title><link>https://stsewd.dev/</link><description></description><atom:link href="https://stsewd.dev/categories/documentation.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:stsewd@protonmail.com"&gt;Santos Gallegos&lt;/a&gt; </copyright><lastBuildDate>Fri, 16 Oct 2020 00:36:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Read the docs</title><link>https://stsewd.dev/posts/read-the-docs/</link><dc:creator>Santos Gallegos</dc:creator><description>&lt;div&gt;&lt;p&gt;When we write software,
people tell us to write docs for it.
But when we use software,
we forgot to read their docs very often.&lt;/p&gt;
&lt;p&gt;A couple of days ago,
I was struggling to remember what the format in &lt;tt class="docutils literal"&gt;/etc/passwd&lt;/tt&gt; means.
Immediately I search for it in Google and found a blog post about it.
Then I stopped to ask myself: why are you searching this on Google and reading it from a blog post?
This should be documented in Linux itself!&lt;/p&gt;
&lt;p&gt;After a minutes, I found the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Man_page"&gt;manpage&lt;/a&gt; for it
(it was the same content of the blog post!).
Then I realized that so many times I search for things in other sites
but their official documentation.&lt;/p&gt;
&lt;p&gt;So, in the next paragraphs I'm going to tell you (or remind you)
where you can search for the official docs of common development tools.&lt;/p&gt;
&lt;div class="section" id="linux-command-docs"&gt;
&lt;h2&gt;Linux command docs&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-h&lt;/span&gt;&lt;/tt&gt;,
probably one fo the most obvious options that we check before executing a command in the terminal,
and that most of the tools have.
Here you can see the list of options and a short description of what that option does.&lt;/p&gt;
&lt;p&gt;Its common usage is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f05f734748c74a3199600ddeeac94696-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;command&lt;/span&gt; --help
&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_592f3f6665164f049717f4ab5e4abfda-1"&gt;&lt;/a&gt;ls --help
&lt;/pre&gt;&lt;p&gt;or&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_aec794189f914260a366452952d1d0d6-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;command&lt;/span&gt; subcommand --help
&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d4bb2d0fe1f24220ba16001b3429380e-1"&gt;&lt;/a&gt;git add --help
&lt;/pre&gt;&lt;p&gt;Man pages,
most of the Linux tools has a respective man page (apart from the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; option).
Man pages have a more detailed documentation than the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; option from the command.&lt;/p&gt;
&lt;p&gt;Most of the time you'll need to run:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a5a83de8969d4e1a94b06889550e75e4-1"&gt;&lt;/a&gt;man &lt;span class="nb"&gt;command&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Example&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b2e0b42853b04ea2bac59dc3778e263a-1"&gt;&lt;/a&gt;man ls
&lt;/pre&gt;&lt;p&gt;But not only commands have man pages,
it also includes documentation of the format used in some configuration files,
kernel functions, libraries (usually the ones used in C).&lt;/p&gt;
&lt;p&gt;How to access to those man pages?
Each man page belongs to a section,
each section is represented by a number:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1   Executable programs or shell commands
2   System calls (functions provided by the kernel)
3   Library calls (functions within program libraries)
4   Special files (usually found in /dev)
5   File formats and conventions eg /etc/passwd
6   Games
7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)
8   System administration commands (usually only for root)
9   Kernel routines [Non standard]
&lt;/pre&gt;
&lt;p&gt;Knowing the section you can get the man page with:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_50de7cd79b404ae5bfa16e5fc693b50a-1"&gt;&lt;/a&gt;man &amp;lt;section&amp;gt; keyword
&lt;/pre&gt;&lt;p&gt;Example:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_443c079a568d42d5aae755fed90d7fa8-1"&gt;&lt;/a&gt;man &lt;span class="m"&gt;1&lt;/span&gt; ls
&lt;a name="rest_code_443c079a568d42d5aae755fed90d7fa8-2"&gt;&lt;/a&gt;man &lt;span class="m"&gt;2&lt;/span&gt; fork
&lt;a name="rest_code_443c079a568d42d5aae755fed90d7fa8-3"&gt;&lt;/a&gt;man &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt;
&lt;a name="rest_code_443c079a568d42d5aae755fed90d7fa8-4"&gt;&lt;/a&gt;man &lt;span class="m"&gt;5&lt;/span&gt; /etc/passwd
&lt;/pre&gt;&lt;p&gt;Some times the result from the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; option or
from the man pages can be very extensive,
and difficult to extract what you need,
or missing clear examples.&lt;/p&gt;
&lt;p&gt;Fortunately there is the &lt;a class="reference external" href="https://github.com/tldr-pages/tldr"&gt;tldr&lt;/a&gt; project,
which has community-driven simplified man pages with common usage examples.&lt;/p&gt;
&lt;p&gt;Did you always forget the correct options to untar a file?&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_5412714b08134ce7923a013192ada901-1"&gt;&lt;/a&gt;tldr tar
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-3"&gt;&lt;/a&gt;  Archiving utility.
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-4"&gt;&lt;/a&gt;  Often combined with a compression method, such as gzip or bzip.
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-5"&gt;&lt;/a&gt;  More information: &amp;lt;https://www.gnu.org/software/tar&amp;gt;.
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-7"&gt;&lt;/a&gt;- Create an archive from files:
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-9"&gt;&lt;/a&gt;  tar -cf target.tar file1 file2 file3
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-11"&gt;&lt;/a&gt;- Extract an archive in a target directory:
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-13"&gt;&lt;/a&gt;  tar -xf source.tar -C directory
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_5412714b08134ce7923a013192ada901-15"&gt;&lt;/a&gt;...
&lt;/pre&gt;&lt;p&gt;If you use Python,
you can install it using &lt;tt class="docutils literal"&gt;pip install tldr&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="from-your-editor"&gt;
&lt;h2&gt;From your editor&lt;/h2&gt;
&lt;p&gt;It's useful to setup your editor to show you the documentation from the name that your cursor is under.
Take a look at &lt;a class="reference external" href="https://langserver.org/"&gt;langserver&lt;/a&gt; for a &lt;em&gt;global&lt;/em&gt; solution and
install the proper plugin for your editor.&lt;/p&gt;
&lt;p&gt;I use &lt;a class="reference external" href="https://neovim.io/"&gt;Neovim&lt;/a&gt; as my main editor.
So I'm going to tell you what I currently use in Neovim.&lt;/p&gt;
&lt;p&gt;First, in Neovim you have the &lt;tt class="docutils literal"&gt;:help&lt;/tt&gt; command to get the help of the editor itself.
Neovim also offers the &lt;tt class="docutils literal"&gt;K&lt;/tt&gt; command,
which runs a program to lookup the keyword under the cursor.
This program can be setup for different file types,
see &lt;tt class="docutils literal"&gt;:help K&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;For instance, try this C code and press &lt;tt class="docutils literal"&gt;K&lt;/tt&gt; under the &lt;tt class="docutils literal"&gt;printf&lt;/tt&gt; function.&lt;/p&gt;
&lt;pre class="code c"&gt;&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#import &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-3"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, world&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_71e912557f2c46999185d11c32b431f8-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;For a general and &lt;em&gt;nicer&lt;/em&gt; solution I use the &lt;a class="reference external" href="https://github.com/neoclide/coc.nvim"&gt;coc plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="online-documentation"&gt;
&lt;h2&gt;Online documentation&lt;/h2&gt;
&lt;p&gt;Some libraries or programs don't include their documentation when you downloaded it,
but probably they have their documentation online.
Note that I'm not referring to a blog post or a tutorial.&lt;/p&gt;
&lt;p&gt;How do you know where to find the online documentation?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Most of the time you can find a link to the documentation in the web site of the library or project.&lt;/li&gt;
&lt;li&gt;Some times you can find a link to the online documentation in the repository page
(like in the &lt;tt class="docutils literal"&gt;README&lt;/tt&gt; file).&lt;/li&gt;
&lt;li&gt;You can also find a link to their documentation in the package page
(like npm or pypi).&lt;/li&gt;
&lt;li&gt;If everything else fails, you can just use Google to find it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way,
for Python packages,
most of the time they have their documentation hosted in &lt;a class="reference external" href="https://readthedocs.org/"&gt;https://readthedocs.org/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python-docs"&gt;
&lt;h2&gt;Python docs&lt;/h2&gt;
&lt;p&gt;I'm a Python developer,
so searching for docs from methods and functions is my daily task.&lt;/p&gt;
&lt;p&gt;When I'm not inside my editor, I use these methods:&lt;/p&gt;
&lt;div class="section" id="the-help-function"&gt;
&lt;h3&gt;The help function&lt;/h3&gt;
&lt;p&gt;Python has a built in function called &lt;tt class="docutils literal"&gt;help&lt;/tt&gt;,
you can use it inside the interpreter like this:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e0f00058b4c845cd911d9ba12ba5d25f-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e0f00058b4c845cd911d9ba12ba5d25f-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;my_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'hello world'&lt;/span&gt;
&lt;a name="rest_code_e0f00058b4c845cd911d9ba12ba5d25f-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The argument can be any function, method, object or module.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pydoc"&gt;
&lt;h3&gt;pydoc&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/pydoc.html"&gt;pydoc&lt;/a&gt; is a command line tool shipped with Python.
It's what the &lt;tt class="docutils literal"&gt;help&lt;/tt&gt; function uses under it.
You can use it from your terminal like this:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_07ef2808152a4129aba15ebbf82e7565-1"&gt;&lt;/a&gt;pydoc open
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="the-official-online-docs"&gt;
&lt;h3&gt;The official online docs&lt;/h3&gt;
&lt;p&gt;For a more extensive documentation,
with several common usage examples.
See the online docs in &lt;a class="reference external" href="https://docs.python.org/"&gt;https://docs.python.org/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusions"&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;If you ever find yourself reading the usage instructions for a tool or method/function from another site having the official docs at hand,
probably is because:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The project doesn't have docs (not so common) -- Help to written if it's the case!&lt;/li&gt;
&lt;li&gt;The project doesn't have good documentation (a little more common) -- Help to improve it if it's the case!&lt;/li&gt;
&lt;li&gt;The documentation isn't written in the language you know (very common) -- Help to translate it if it's the case!&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>documentation</category><category>read the docs</category><guid>https://stsewd.dev/posts/read-the-docs/</guid><pubDate>Sat, 06 Jul 2019 05:00:00 GMT</pubDate></item></channel></rss>